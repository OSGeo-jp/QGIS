<style>
	#toolbarConsole td{
		background: #f6f6f6;
	}
</style>
<h3>Pythonコンソール for QGIS</h3>
<a href="#console">コンソール</a><br>
<a href="#editor">エディタ</a><br>
<a href="#settings">設定</a><br><br>
<table>
	<tr>
		<td>
			<p align='justify'>
				QGIS PythonコンソールはPythonコマンドを実行するための対話型シェルです.
				それはあなたのPythonスクリプトを編集して保存することができるファイルエディタも持っています.
				コンソールとエディタの両方ともPyQScintilla2パッケージをもとに作成されています.<br>
				コンソールは上下に2つのメインパネルに分けられており、水平スプリッタを使用してサイズ変更が可能です.
				出力領域パネルはコマンド出力を表示する読み取り専用のウィジェットです.
				入力領域にはテキストをドラッグ&ドロップしたりコピー&ペーストしたりすることができます. 出力パネルのテキストを選択してコンテキストメニューから<label>選択の入力</label>コマンドをクリックすることによってもコードスニペットを実行することができます. 
				選択されたテキストにインタプリタのプロンプト(>>>や...)が含まれていても構いません.
				入力領域パネルはコマンドを入力するための対話型のPythonシェルです.<br>
				Pythonファイルエディタにアクセスするにはツールバーの<label>エディタの表示</label>ボタンを使います.
				エディタではPythonファイルを編集して保存することができ、あなたのコードを管理するための基本的な機能を提供しています
				(コードのコメントやコメント解除、構文チェック、codepad.orgを通じたコードの共有など).
			</p>
		</td>
	</tr>
</table>
<a name="console">
<h4>コンソール</h4>
</a>
<b><i>主な特徴:</i></b>
<table>
	<tr>
		<td>
			<ul>
			<li>次のAPIでコード補完と構文ハイライト、コールチップスが利用できます:
				<ol>
				<li>Python</li>
				<li>PyQGIS</li>
				<li>PyQt4</li>
				<li>QScintilla2</li>
				<li>osgeo-gdal-ogr</li>
				</ol>
			</li>
			<br>
			<li><label>Ctrl+Alt+Space</label>で自動補完リストを表示します.</li>
			<br>
			<li><label>Ctrl+Shift+Space</label>でコマンド履歴リストを表示します.</li>
			<br>
                        <li>出力パネルの<label>選択を入力</label>コマンドでコードスニペットが実行できます.</li>
			<br>
			<li>QGIS API ドキュメントを開くには<label>_api</label>とタイプします.</li>
			<br>
			<li>PyQGIS Cookbookを開くには<label>_pyqgis</label>とタイプします.</li>
			<br>
			<li>コマンド履歴の保存やクリアは入力パネルのコンテキストメニューからアクセスします.
			履歴は ~/.qgis2/console_history.txt ファイルに保存されます.</li>
			<br>
			</ul>
		</td>
		<td><img src="qrc:/images/themes/default/console/consoleHelp.png" /></td>
	</tr>
</table>
<b><i>ツールバー:</i></b>
	<table width="100%" id='toolbarConsole'>
		<tr>
			<td><img src="qrc:/images/themes/default/console/iconClearConsole.png" /></td>
			<td colspan="2">Pythonコンソールをクリアします</td>
		</tr>
		<tr>
			<td><img src="qrc:/images/themes/default/console/iconClassConsole.png" /></td>
			<td><img src="qrc:/images/themes/default/console/iconSextanteConsole.png" /></td>
			<td>Sextanteクラスをインポートします</td>
		</tr>
		<tr>
			<td></td>
			<td><img src="qrc:/images/themes/default/console/iconQtCoreConsole.png" /></td>
			<td>PyQt4.QtCoreクラスをインポートします</td>
		</tr>
		<tr>
			<td></td>
			<td><img src="qrc:/images/themes/default/console/iconQtGuiConsole.png" /></td>
			<td>PyQt4.QtGuiクラスをインポートします</td>
		</tr>
                <tr>
			<td><img src="qrc:/images/themes/default/console/iconRunConsole.png" /></td>
			<td colspan="2">コマンドの実行 (Enterキーを押すのと同様)</td>
		</tr>
		<tr>
			<td><img src="qrc:/images/themes/default/console/iconSettingsConsole.png" /></td>
			<td colspan="2">設定</td>
		</tr>
		<tr>
			<td><img src="qrc:/images/themes/default/console/iconHelpConsole.png" /></td>
			<td colspan="2">ヘルプ</td>
		</tr>
</table>
<a name="editor">
<h4>エディタ</h4>
</a>
<b><i>主な特徴:</i></b>
<table>
	<tr>
		<td>
			<img src="qrc:/images/themes/default/console/editorHelp.png" />
			<img src="qrc:/images/themes/default/console/classBrowserHelp.png" />
		</td>
		<td>
			<ul>
			<li>次のAPIでコード補完と構文ハイライト、コールチップスが利用できます:
				<ol>
				<li>Python</li>
				<li>PyQGIS</li>
				<li>PyQt4</li>
				<li>QScintilla2</li>
				<li>osgeo-gdal-ogr</li>
				</ol>
			</li>
			<br>
			<li><label>Ctrl+Space</label>で自動補完リストを表示します.</li>
			<br>
			<li>codepad.orgを通じてコードスニペットを共有できます.</li>
			<br>
			<li><label>Ctrl+4</label> 構文チェック.</li> 
			<br>
			<li>オブジェクトインスペクタ: クラスと関数のブラウザ.</li>
			<br>
			<li>マウスをクリックでオブジェクト定義を表示します(オブジェクトインスペクタから).</li>
			<br>
			<li><label>選択を入力</label>コマンドでコードスニペットを実行します.</li>
			<br>
			<li><label>スクリプト実行</label>コマンドでスクリプト全部を実行します.
			(拡張子が.pycのバイトコンパイルファイルを生成します)</li>
			<br>
			</ul>
		</td>
	</tr>
</table>
<a name="settings">
<h4>設定</h4>
</a>
<b><i>Pythonコンソールの追加設定:</i></b>
<ul>
<li><label>自動入力補完:</label> チェックした場合、コード補完が有効になります.
あなたは現在のドキュメントやインストールされたAPIやそれらの両方から自動入力補完を得ることができます</li>
<br>
<li><label>オートコンプリートのしきい値:</label> オートコンプリートリストを表示するしきい値を設定します (タイプされた文字数)</li>
<br>
<li><label>自動括弧挿入:</label> チェックしている場合、括弧が自動で閉じられます.</li>
<br>
<li><label>実行前にスクリプトを自動保存する:</label> 変更後に保存しなくてもよいように実行されるスクリプトを自動で保存するようにします.
このアクションはシステムの一時ディレクトリに一時ファイルを保存します. それは実行後に自動的に削除されます.</li>
<br>
<li><label>事前にロードされたAPIファイルを利用する:</label> 事前にロードされたAPIファイルを使うかあなたのシステムに保存されたAPIファイルをロードするか選択できます.</li>
</ul>
<p style='border: 1px solid; background:#f6f6f6;' align='justify'>
	<b>注意:</b> 閉じるボタンでPythonコンソールを閉じるとコンソールのウィジェットの状態を保存できます. これによって次回起動時に復元されるジオメトリを保存できます.
</p>
